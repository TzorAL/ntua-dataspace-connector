{{- if .Values.adminUi.enabled }}
  {{- with .Values.adminUi.ingress }}
{{- if $.Values.useNewIngress }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ template "tsg-connector.fullname" $ }}-core-container-ui
  labels: {{ include "tsg-connector.labels" $ | nindent 4 }}
  annotations:
    {{- with $.Values.deployment.annotations }}
    {{- tpl (toYaml . ) $ | nindent 4 }}
    {{- end }}
    kubernetes.io/ingress.class: nginx
    {{- if .clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .clusterIssuer }}
    {{- end }}
    {{- with .rewriteTarget }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ . }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    {{- with .annotations }}
    {{- tpl (toYaml . ) $ | nindent 4 }}
    {{- end }}
spec:
  tls:
  - hosts:
    - {{ .host | default $.Values.host }}
    secretName: {{ .secretName | default (printf "%s-tls-secret" (.host | default $.Values.host)) }}
  rules:
  - host: {{ .host | default $.Values.host }}
    http:
      paths:
{{- if $.Values.useNewIngress }}
      - path: {{ .path | default "/router" }}
        pathType: Prefix
        backend:
          service:
            name: {{ template "tsg-connector.fullname" $ }}-core-container-ui
            port:
              number: 80
{{- else }}
      - backend:
          serviceName: {{ template "tsg-connector.fullname" $ }}-core-container-ui
          servicePort: 80
        path: {{ .path | default "/router" }}
{{- end }}
  {{- end }}
{{ end -}}
