host: {host-name}

coreContainer:
  image: docker.nexus.dataspac.es/core-container:1.2.0
  environment:
  - name: ENABLE_OCSP
    value: "false"
  - name: ENABLE_CRL
    value: "false"
  ingress:
    path: /(.*)
    rewriteTarget: /$1
    clusterIssuer: letsencrypt
    ingressClass: public

adminUi:
  enabled: true
  image: docker.nexus.dataspac.es/ui/core-container-ui:master
  ingress:
    path: /ui/(.*)
    rewriteTarget: /$1

ids:
  info:
    idsid: {IDS_COMPONENT_ID}
    curator: {IDS_PARTICIPANT_ID}
    maintainer: {IDS_PARTICIPANT_ID}
    titles:
      - CONNECTOR TITLE@en
    descriptions:
      - CONNECTOR DESCRIPTION@en
    accessUrl:
      - https://CONNECTOR_ACCESS_URL/router

  routes:
    ingress:
      http:
        - dataApp: http://{{ template "tsg-connector.fullname" . }}-openapi-data-app-http:8080/router
          endpoint: router
          parameters: "&matchOnUriPrefix=true"
  
  security:
    apiKeys:
      - id: default
        key: APIKEY-sgqgCPJWgQjmMWrKLAmkETDE # CHANGE (also at line 55)
        roles:
          - DATA_APP
          - PEF_MANAGER
    users:
      - id: admin
        # -- BCrypt encoded password (defaults to enershare)
        password: $2a$12$cOEhv/gcpyCFs5KkObTbweQ0axqwIuKysZdeJMArNxHCXWzYayddu
        roles:
          - ADMIN

  daps:
    url: https://daps.enershare.dataspac.es/v2

  broker:
    id: urn:ids:enershare:connectors:MetadataBroker
    address: https://broker.enershare.dataspac.es/infrastructure
    autoRegister: true

containers:
  - type: data-app
    name: openapi-data-app
    image: docker.nexus.dataspac.es/data-apps/openapi-data-app:2.1.0
    apiKey: APIKEY-sgqgCPJWgQjmMWrKLAmkETDE # CHANGE (also at line 32)
    config:
      openApi:
        usePolicyEnforcement: false  
        agents:
            - id: {IDS_COMPONENT_ID}:{AgentName} # custom agent defined by user
              backEndUrlMapping:
                {api-version}: http://{service-name}:{internal-service-port}
              title: SERVICE TITLE
              openApiBaseUrl: https://app.swaggerhub.com/apiproxy/registry/{username}/{api-name}/
              versions: 
              - {api-version}            
    services:
      - port: 8080
        name: http
        ingress:
          path: /data-app/(.*)
          rewriteTarget: /$1
          clusterIssuer: letsencrypt
          ingressClass: public
